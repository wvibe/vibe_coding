# Training configuration for YOLOv12 SEGMENTATION (TEST RUN)
# Based on yolov11/finetune_segment_cov_segm.yaml, adapted for YOLOv12
# and using a fraction of COV_SEGM dataset for initial testing.

# --- Base Model & Dataset ---
model: yolo12l-seg.pt  # Base model weights file (YOLOv12 Large Segmentation)
data: configs/yolov12/cov_segm_segment_visible_test.yaml # Path to the dataset definition yaml for the test run.

# --- Training Hyperparameters ---
epochs: 50            # Maximum number of epochs. Early stopping (patience) will likely stop it earlier.
imgsz: 640            # Training image size.
batch: 192            # Batch size for 8x A10G (24GB VRAM). 192/8 = 24 images/GPU.
                      # Monitor VRAM: if usage < ~22GB, consider increasing to 256 (32/GPU).
workers: 64           # Number of dataloader workers (e.g., 8 per GPU). Adjust based on CPU/IO.
optimizer: SGD        # Optimizer choice. AdamW with lr0=0.0005 could be an alternative.
lr0: 0.02             # Initial learning rate for SGD. Kept relatively low due to strong regularization.
lrf: 0.02             # Final learning rate factor (final_lr = lr0 * lrf).
warmup_epochs: 5      # Warmup epochs for learning rate.
cos_lr: True          # Use cosine learning rate annealing schedule (Recommended).
fraction: 0.2         # Use 20% of the training dataset per epoch for this test run.
close_mosaic: 10      # Disable mosaic augmentation for the last N epochs (Standard practice).

# --- Regularization & Augmentation to Prevent Overfitting ---
mixup: 0.15           # Enable MixUp augmentation (Helps regularization). Adjust value (0.05-0.15) if needed.
copy_paste: 0.2       # Enable Copy-Paste augmentation (Helps segmentation regularization). Adjust if needed.
# dropout: 0.05         # Add dropout for regularization. Check model structure compatibility if issues arise.
weight_decay: 0.001   # Explicitly set weight decay for SGD.
patience: 15          # Enable early stopping. Stop if val mAP50-95 doesn't improve for 15 epochs.
# Other augmentation defaults from Ultralytics are usually active (e.g., hsv, flip).
# You can tune them further if needed (e.g., scale, translate).

# --- Execution Settings ---
device: '0,1,2,3,4,5,6,7'     # Use all 8 A10G GPUs.
pretrained: True      # Start from pretrained weights (Fine-tuning).
exist_ok: True        # Allow overwriting/appending to existing run when resuming (though resume=False here).
amp: True             # Enable Automatic Mixed Precision (Recommended for A10G). Should be default.
save_period: 5

# --- Output Settings ---
project: runs/segment/yolo12_cov_segm_test # wandb project
# wdir_root: weights # skip separate weights directory
csv_root: logs

# --- Wandb Logging ---
enable_wandb: True    # Set to True to use WandB (ensure you are logged in).