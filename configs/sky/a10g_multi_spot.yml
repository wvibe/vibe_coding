# ===============================================================
#  yolo11l_seg_4x8.yaml  – 32×A10G distributed YOLOv11-Seg run
# ===============================================================

name: yolo11l-seg-4x8

# 1. Resources --------------------------------------------------
num_nodes: 4
resources:
    cloud: aws
    accelerators: {A10g: 8}
    disk_size: 2048          # 2 TB for dataset + cache + checkpoints
    use_spot: True
    job_recovery: {max_restarts_on_errors: 10}

# 2. File mounts ------------------------------------------------
file_mounts:
    /usr/bin/copy_secrets.sh: ~/lab42_vr/scripts/sky/copy_secrets.sh
    /nfs:
        source: s3://covariant-sky-nfs
        mode: MOUNT

    ~/.cache/huggingface/token: ~/.cache/huggingface/token
    ~/.ssh/id_ed25519:          ~/.ssh/id_ed25519_sky
    ~/.ssh/config:              ~/.ssh/config_sky
    ~/.bash_aliases:            ~/.bash_aliases
    ~/.gitconfig:               ~/.gitconfig
    ~/.gitconfig-vibe:          ~/.gitconfig-vibe

# 3. Runtime environment variables ------------------------------
envs:
    DATASETS_ROOT: /home/ubuntu/vibe/hub/datasets
    COV_SEGM_ROOT: /home/ubuntu/vibe/hub/datasets/COV_SEGM
    WANDB_API_KEY: 18b980b9a54496f85b9bff02d981687fb208b706

# 4. Setup (runs once per node) --------------------------------
setup: |
    set -eux

    # secrets / AWS
    mkdir -p ~/.ssh && chmod 700 ~/.ssh
    chmod +x /usr/bin/copy_secrets.sh
    bash /usr/bin/copy_secrets.sh

    # conda & python
    eval "$(/home/ubuntu/miniconda3/bin/conda shell.bash hook)"
    conda env list | grep -q '^vbl' || conda create -y -n vbl python=3.12
    conda activate vbl
    pip install -U pip setuptools wheel

    # CUDA 12.2 wheels for A10G
    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu122

    # generic Python deps
    pip install transformers datasets wandb

    # clone repo (only on rank-0, SkyPilot syncs workdir automatically)
    if [ "$SKYPILOT_NODE_RANK" = "0" ] && [ ! -d ~/vibe/vibe_coding ]; then
        mkdir -p ~/vibe
        git clone git@gh-vibe:wvibe/vibe_coding.git ~/vibe/vibe_coding
    fi

    # editable install on every node (after sync)
    cd ~/vibe/vibe_coding
    pip install -e .

# 5. Run --------------------------------------------------------
run: |
    set -eux
    eval "$(/home/ubuntu/miniconda3/bin/conda shell.bash hook)"
    conda activate vbl
    cd ~/vibe/vibe_coding

    # 5.1 write .env for local code that expects it
    cat > .env <<EOF
DATASETS_ROOT=${DATASETS_ROOT}
COV_SEGM_ROOT=${COV_SEGM_ROOT}
WANDB_API_KEY=${WANDB_API_KEY}
EOF

    # 5.2 unpack dataset locally once per node
    TAR_PATH=/nfs/wmu/datasets/cov_segm_v3/cov_segm_to_yolo.full.650k.ready.tar
    if [ ! -d "${COV_SEGM_ROOT}/labels/train" ]; then
        echo "[rank ${SKYPILOT_NODE_RANK}] extracting dataset to ${DATASETS_ROOT}"
        mkdir -p "${DATASETS_ROOT}"
        tar -C "${DATASETS_ROOT}" -xf "${TAR_PATH}"
    fi

    # 5.3 unify output directory via NFS
    RUNS_DIR=/nfs/wmu/models/ultralytics/yolo.v11/runs/cov_segm/finetune
    mkdir -p "${RUNS_DIR}"
    ln -sfn "${RUNS_DIR}" yolo_ultralytics

    # 5.4 enable Weights & Biases
    yolo settings wandb=True

    # 5.5 launch multi-node training
    MASTER_ADDR=$(echo "${SKYPILOT_NODE_IPS}" | head -n1)

    torchrun \
        --nnodes=${SKYPILOT_NUM_NODES} \
        --nproc_per_node=${SKYPILOT_NUM_GPUS_PER_NODE} \
        --node_rank=${SKYPILOT_NODE_RANK} \
        --master_addr=${MASTER_ADDR} --master_port=29500 \
        -m src.models.ext.yolov11.train_segment \
            --config configs/yolov11/finetune_segment_cov_segm_full.yaml \
            --name ft_yolo11l-seg_full_32A10G_run \
            --project yolo_ultralytics \
            --device 0,1,2,3,4,5,6,7 \
            --cache disk \
            --batch 640 \
            --epochs 40 \
            --lr0 0.04
